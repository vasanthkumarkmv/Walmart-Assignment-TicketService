/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.walgreens.ticketservice.api;

import com.walgreens.ticketservice.vo.KeyInfo;
import com.walgreens.ticketservice.vo.VenueDetails;
import com.walgreens.ticketservice.vo.VenueDetailsExt;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-01-01T15:23:50.265-06:00")

@Api(value = "venues", description = "the venues API")
public interface VenuesApi {

    @ApiOperation(value = "Add a new venue to the ticket services", notes = "This API end point adds a venue resources", response = KeyInfo.class, tags={ "1. Venue", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created", response = KeyInfo.class),
        @ApiResponse(code = 405, message = "Invalid input", response = Void.class) })
    
    @RequestMapping(value = "/venues",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<KeyInfo> addVenue(@ApiParam(value = "Venue resource that needs to be added" ,required=true )  @Valid @RequestBody VenueDetails venueDetails);


    @ApiOperation(value = "Gets all the venues in system", notes = "This API lists details of all the venues", response = VenueDetailsExt.class, responseContainer = "List", tags={ "1. Venue", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = VenueDetailsExt.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/venues/findAll",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<VenueDetailsExt>> fetchVenues();


    @ApiOperation(value = "Update venue details", notes = "This API end point updates a venue details", response = Void.class, tags={ "1. Venue", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated", response = Void.class),
        @ApiResponse(code = 405, message = "Invalid input", response = Void.class) })
    
    @RequestMapping(value = "/venues/{venueId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateVenue(@ApiParam(value = "Venue ID",required=true ) @PathVariable("venueId") Integer venueId,@ApiParam(value = "Venue details that needs to be updated" ,required=true )  @Valid @RequestBody VenueDetails venueDetails);

}
